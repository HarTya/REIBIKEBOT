require('dotenv').config()
const TelegramApi = require('node-telegram-bot-api');
const fetch = require('cross-fetch');

const bot = new TelegramApi(process.env.TOKEN, {polling: true});
const webAppUrl = 'https://reibike.vercel.app/';

async function sendMessage(chatId, text, user) {
    try {
        if (String(text).includes('/start')) {
            return bot.sendMessage(chatId, `üñê –í—ñ—Ç–∞—î–º–æ! –û–ø–∏—à—ñ—Ç—å –ø—Ä–æ–±–ª–µ–º—É —É –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—ñ`, {
                reply_markup: {
                    inline_keyboard: [
                        [{text: '–ù–∞—à —Å–∞–π—Ç', web_app: {url: webAppUrl}}]
                    ]
                }
            })
        }

        if (String(text).length < 15) {
            return bot.sendMessage(chatId, `‚ùå –î–æ–≤–∂–∏–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –º–µ–Ω—à–µ –Ω—ñ–∂ 15 —Å–∏–º–≤–æ–ª—ñ–≤`)
        }

        if (String(text).length > 500) {
            return bot.sendMessage(chatId, `‚ùå –î–æ–≤–∂–∏–Ω–∞ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –±—ñ–ª—å—à–µ –Ω—ñ–∂ 500 —Å–∏–º–≤–æ–ª—ñ–≤`)
        }

        const res = await fetch(`https://api.telegram.org/bot${process.env.TOKEN}/sendMessage?chat_id=${process.env.GROUP_ID}&text=@${user} ${String(text).trim()}`);
    
        if (res.status >= 400) {
            return bot.sendMessage(chatId, `‚ùå –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ¬´${String(text).trim()}¬ª –ù–ï –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ, —Å–ø—Ä–æ–±—É–π—Ç–µ –∑–Ω–æ–≤—É`)
        }

        return bot.sendMessage(chatId, `‚úÖ –í–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ¬´${String(text).trim()}¬ª –±—É–ª–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ, –º–∏ —Ä–æ–∑–≥–ª—è–Ω–µ–º–æ –π–æ–≥–æ —Ç–∞ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏, —è–∫—â–æ —Ü–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ`)
    } catch (err) {
        return bot.sendMessage(chatId, `‚ùó–ü–æ–º–∏–ª–∫–∞ ‚ùØ ${err}`)
    }
}

bot.on('message', async msg => {
    const text = msg.text;
    const chatId = msg.chat.id;
    const user = msg.chat.username;

    sendMessage(chatId, text, user)
})